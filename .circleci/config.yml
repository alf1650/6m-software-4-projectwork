version: 2.1
orbs:
  node: circleci/maven@1.4.1
  docker: circleci/docker@2.1.4
  # heroku: circleci/heroku@2.0.0
  # snyk: snyk/snyk@1.5.0

jobs:
  build:
    docker:
      - image: cimg/openjdk:17.0.8
    steps:
      - checkout
      - run:
          name: Build Maven Project
          command: mvn install


  test:
    docker:
      - image: cimg/openjdk:17.0.8
    steps:
      - checkout
      - run: |
          echo "Running tests..."
          mvn clean

    # docker-deploy:
    # docker:
    #   - image: docker:20.10.8
    
    # steps:
    #   - checkout
    #   - setup_remote_docker:
    #       version: 20.10.8
    #   - run:
    #       name: Build and Push Docker Image
    #       command: |
    #         docker build -t my-java-app:latest .
    #         docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
    #         docker tag my-java-app:latest your-docker-registry/my-java-app:latest
    #         docker push your-docker-registry/my-java-app:latest

  build-and-push:
    executor: docker/docker
    steps:
      - setup_remote_docker
      - checkout
      - docker/check
      - docker/build:
          image: alf1650/software-4-projectwork
          tag: <<pipeline.git.tag>>
      - docker/push:
          image: alf1650/software-4-projectwork
          tag: <<pipeline.git.tag>>
  # test:
  #   docker:
  #     - image: cimg/node:16.10
  #   steps:
  #     - checkout
  #     - node/install-packages:
  #         pkg-manager: npm
  #     - run: |
  #         echo "Running tests..."
  #         npm run test
  # build-and-push:
  #   executor: docker/docker
  #   steps:
  #     - setup_remote_docker
  #     - checkout
  #     - docker/check
  #     - docker/build:
  #         image: alf1650/education-space
  #         tag: <<pipeline.git.tag>>
  #     - docker/push:
  #         image: alf1650/education-space
  #         tag: <<pipeline.git.tag>>
  # scan:
  #   docker: 
  #     - image: cimg/node:16.10
  #   environment:
  #     IMAGE_NAME: alf1650/education-space
  #   steps: 
  #     - checkout
  #     - setup_remote_docker
  #     - docker/check
  #     - run: docker build -t $IMAGE_NAME .
  #     - snyk/scan: 
  #       docker-image-name: $IMAGE_NAME

  # deploy:
  #   docker:
  #     - image:  cimg/node:16.10
  #   steps:
  #     - setup_remote_docker
  #     - heroku/install
  #     - checkout
  #     - run:
  #         name: Heroku Container Push
  #         command: |
  #           heroku container:login
  #           heroku container:push web -a alf1650
  #           heroku container:release web -a alf1650

workflows:
  simple_workflow:
    jobs:
      - build
      - test:
          requires:
            - build
      - build-and-push:
          requires:
            - test
#       # - deploy:
#       #     requires:
#       #       - build-and-push
#       - scan:
#           requires:
#             - build


# workflows: 
#   simple_workflow:
#     jobs:
#       - build:
#           filters:
#             branches:
#               only: main
#       - test:  
#           requires:
#             - build
#           filters:
#             branches:
#               only: main
#       - build-and-push: #This should run only if a tag is pushed, not if a branch is pushed
#           filters:
#             tags:
#               only: /^v.*/ #only considers tags starting with v (ex. v1.0.2)
#             branches:
#               ignore: /.*/ #ignores all branches